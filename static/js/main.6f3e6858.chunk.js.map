{"version":3,"sources":["Components/loader.gif","Components/Cards.js","Components/Loader.js","Pages/Home.js","Pages/About.js","Pages/Tips.js","Pages/India.js","Components/Navbar.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","Cards","props","numbers","key","id","className","number","to","pathname","toLowerCase","item","Loader","height","src","load","alt","Home","useState","data","getData","loading","setLoading","useEffect","a","fetch","then","response","json","prevArr","confirmed","value","recovered","deaths","catch","error","console","log","getCoronaInfo","map","index","indexOf","About","style","textDecoration","href","Tips","India","Navbar","isIndia","setIsIndia","onClick","e","target","parentElement","classList","contains","document","getElementById","remove","add","Boolean","window","location","hostname","match","ReactDOM","render","exact","path","component","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6f3e6858.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.93e2c2db.gif\";","import React, {  } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nexport default function Cards(props) {\r\n  const numbers = [\"Confirmed\", \"Recovered\", \"Deaths\", \"Safety Tips\"];\r\n  return (\r\n    <div key={props.id} className=\"grid-content cards-container\">\r\n      <p>{numbers[props.number]}</p>\r\n      <Link to ={{pathname: `/corona-toll-react-app/${numbers[props.number].toLowerCase()}`}} id={numbers[props.number]} className=\"count\">\r\n        {props.item}\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport load from './loader.gif'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div>\r\n            <img height = \"100px\" src={load} alt=\"Loading...\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Cards from \"../Components/Cards\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../Components/Loader\";\r\nexport default function Home(props) {\r\n  const [data, getData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const getCoronaInfo = async () => {\r\n      fetch(`https://covid19.mathdro.id/api`)\r\n        .then(response => response.json()) \r\n        .then(data =>\r\n          {getData(prevArr => [...prevArr, data.confirmed.value]);\r\n          getData(prevArr => [...prevArr, data.recovered.value]);\r\n          getData(prevArr => [...prevArr, data.deaths.value]);\r\n          setLoading(false);}\r\n        )\r\n        .catch(error => console.log(\"Error occured: \" + error));\r\n    };\r\n    getCoronaInfo();\r\n  }, []);\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div id=\"home-container\">\r\n      <div className=\"grid-container\">\r\n        {data.map(item => (\r\n          <Cards key={item.index} item={item} number={data.indexOf(item)} />\r\n        ))}\r\n      </div>\r\n      <div className=\"button-container\">\r\n        <Link to=\"/corona-toll-react-app/tips\">Safety tips</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"about-container\">\r\n            <p>This web app was developed in React JS and it follows a particular design pattern called Neumorphism.</p>\r\n            <p>The purpose of this app is to get real-time data on the deadly Novel Corona Virus codenamed COVID-19.</p>\r\n            <p>This project is developed by Vignesh Narendran and the source code is available in this <a style={{textDecoration: 'underline'}}  href=\"https://github.com/vignesh-narendran/corona-toll-react-app\">github repository</a></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\r\n\r\nfunction Tips() {\r\n    return (\r\n        <div className=\"tips-container\">\r\n            <p><strong>Wash you hands with soap</strong> - Soap removes the fat that holds the virus and it's protiens together. Once the grease is removed, the virus disconnects from it's protien and dies.</p>\r\n            <p><strong>Do not touch your face</strong> - The virus that is present on the surface of your hands could get into your nose, eyes and mouth.</p>\r\n            <p><strong>Keep safe distance</strong> - The primary mode of transport of this virus is through droplets from the infected patient. So keep safe distance from people.</p>\r\n            <p><strong>Stay at home</strong> - This helps both you and your community stop spreading the virus.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tips\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Cards from \"../Components/Cards\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../Components/Loader\";\r\nexport default function India(props) {\r\n  const [data, getData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const getCoronaInfo = async () => {\r\n      fetch(`https://covid19.mathdro.id/api/countries/india`)\r\n        .then(response => response.json()) \r\n        .then(data =>\r\n          {getData(prevArr => [...prevArr, data.confirmed.value]);\r\n          getData(prevArr => [...prevArr, data.recovered.value]);\r\n          getData(prevArr => [...prevArr, data.deaths.value]);\r\n          setLoading(false);}\r\n        )\r\n        .catch(error => console.log(\"Error occured: \" + error));\r\n    };\r\n    getCoronaInfo();\r\n  }, []);\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n  return (\r\n    <div id=\"home-container\">\r\n      <div className=\"grid-container\">\r\n        {data.map(item => (\r\n          <Cards key={item.index} item={item} number={data.indexOf(item)} />\r\n        ))}\r\n      </div>\r\n      <div className=\"button-container\">\r\n        <Link to=\"/corona-toll-react-app/tips\">Safety tips</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar() {\r\n    const [isIndia, setIsIndia] = useState(\"india\");\r\n  const toggleSwitch = e => {\r\n    if (e.target.parentElement.classList.contains(\"only-india-clicked\")) {\r\n      document\r\n        .getElementById(\"only-india\")\r\n        .parentElement.classList.remove(\"only-india-clicked\");\r\n        setIsIndia(\"india\");\r\n    \r\n    } else {\r\n      document\r\n        .getElementById(\"only-india\")\r\n        .parentElement.classList.add(\"only-india-clicked\");\r\n    setIsIndia(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"navbar-container\">\r\n      <h2>The Novel Corona Virus Toll</h2>\r\n      <div className=\"button-container\">\r\n        <Link to=\"/corona-toll-react-app/about\">About</Link>\r\n      </div>\r\n      <div className=\"button-container\">\r\n      <Link onClick={toggleSwitch} id=\"only-india\" to={`/corona-toll-react-app/${isIndia}`} >Only India</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Home from './Pages/Home';\nimport About from './Pages/About';\nimport Tips from './Pages/Tips';\nimport India from './Pages/India';\nimport Navbar from './Components/Navbar';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nexport default function App() { \n\n  return (\n    <div className=\"main-container\">\n      <Router>\n        <Navbar/>\n        <Switch>\n          <Route exact path=\"/corona-toll-react-app\" component={Home}/>\n          <Route exact path=\"/corona-toll-react-app/india\" component={India}/>\n          <Route exact path=\"/corona-toll-react-app/about\" component={About}/>\n          <Route exact path=\"/corona-toll-react-app/tips\" component={Tips}/>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n"],"sourceRoot":""}